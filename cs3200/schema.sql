-- MySQL Script generated by MySQL Workbench
-- Mon Oct 23 16:37:26 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`User` ;

CREATE TABLE IF NOT EXISTS `mydb`.`User` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NULL,
  `type` VARCHAR(45) NULL DEFAULT 'individual or orgnization',
  `fullName` VARCHAR(45) NOT NULL,
  `profile` VARCHAR(255) NOT NULL,
  `hidden` TINYINT NULL DEFAULT 0,
  `created` DATETIME NOT NULL default now(),
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;

 -- -----------------------------------------------------
-- Table `mydb`.`Tweet`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Tweet` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Tweet` (
  `tweet_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NULL,
  `content` VARCHAR(511) NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`tweet_id`),
  FOREIGN KEY (`user_id`)  REFERENCES User(`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Following`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Following` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Following` (
  `user_id` INT NOT NULL ,
  `following_user_id` INT NOT NULL,
  PRIMARY KEY (`following_user_id` , `user_id`  ),
  FOREIGN KEY (`user_id`)
    REFERENCES  User(`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_idUser`
  FOREIGN KEY (`following_user_id`) REFERENCES User(`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- FOREIGN KEY (`idUser`)  REFERENCES User(`id`)

-- -----------------------------------------------------
-- Table `mydb`.`Follower`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Follower` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Follower` (
  `user_id` INT NOT NULL,
  `follower_user_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `follower_user_id`),
  CONSTRAINT `FK_follower`
    FOREIGN KEY (`follower_user_id`)  REFERENCES User(`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_id`
    FOREIGN KEY (`user_id`)  REFERENCES User(`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Reply`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Reply` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Reply` (
  `reply_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NULL,
  `tweet_id` INT NULL,
  `content` VARCHAR(511) NULL,
  `created` DATETIME NULL,
  PRIMARY KEY (`reply_id`),
  CONSTRAINT `FK_tweet`
    FOREIGN KEY (`tweet_id`)
    REFERENCES    tweet(`tweet_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Like`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Like` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Like` (
  `tweet_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`tweet_id`, `user_id`),
  CONSTRAINT `FK_tweet_like`
    FOREIGN KEY (`tweet_id`)
    REFERENCES    tweet(`tweet_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Retweet`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`Retweet` ;

CREATE TABLE IF NOT EXISTS `mydb`.`Retweet` (
  `tweet_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`tweet_id`, `user_id`),
  CONSTRAINT `FK_tweet_retweet`
    FOREIGN KEY (`tweet_id`)
    REFERENCES Tweet(`tweet_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
 CONSTRAINT `FK_tweet_user`
    FOREIGN KEY (`user_id`)
    REFERENCES User(`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)  
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`hashtag`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`hashtag` ;

CREATE TABLE IF NOT EXISTS `mydb`.`hashtag` (
  `hashtag_id` INT NOT NULL AUTO_INCREMENT,
  `tag` VARCHAR(45) NOT NULL,
  `created` DATETIME DEFAULT now(),
  PRIMARY KEY (`hashtag_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`hashtagTweet`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`hashtagTweet` ;

CREATE TABLE IF NOT EXISTS `mydb`.`hashtagTweet` (
  `hashtag_id` INT NOT NULL,
  `tweet_id` INT NOT NULL,
  PRIMARY KEY (`hashtag_id`, `tweet_id`),
  CONSTRAINT `FK_hashtag`
    FOREIGN KEY (`hashtag_id`)
    REFERENCES hashtag(`hashtag_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_tweet_id`
    FOREIGN KEY (`tweet_id`)
    REFERENCES Tweet(`tweet_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`hashtagReply`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`hashtagReply` ;

CREATE TABLE IF NOT EXISTS `mydb`.`hashtagReply` (
  `hashtag_id` INT NOT NULL,
  `reply_id` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`hashtag_id`, `reply_id`),
  CONSTRAINT `FK_hashtag_c`
    FOREIGN KEY (`hashtag_id`)
    REFERENCES `mydb`.`hashtag` (`hashtag_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_reply`
    FOREIGN KEY (`reply_id`)
    REFERENCES Reply(`reply_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- ALTER TABLE User CHANGE user_id user_id  INT AUTO_INCREMENT  ;
-- ALTER TABLE Tweet CHANGE tweet_id tweet_id  INT AUTO_INCREMENT;
-- ALTER TABLE Reply CHANGE reply_id reply_id  INT AUTO_INCREMENT ;
-- ALTER TABLE hashtag CHANGE hashtag_id hashtag_id  INT AUTO_INCREMENT ;

 

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
